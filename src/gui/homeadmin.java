/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;
import model.ExpiryDateCellRenderer;
import model.FoodInventorySystem;
import access.Ingredientdao;
import model.Ingredient;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.jar.Attributes.Name;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 *
 * @author imkir
 */
public class homeadmin extends javax.swing.JFrame {
private Ingredientdao ingredientDao = new Ingredientdao();


    /**
     * Creates new form FoodInventorySystem
     */
    public homeadmin() {
        initComponents();
        setupTable();
//updateTable();

    }
     private void setupTable() {
        TableColumn expiryColumn = ingtable.getColumnModel().getColumn(2); // Assuming expiry date is in column 2
        expiryColumn.setCellRenderer(new ExpiryDateCellRenderer());
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        ingtable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ingname = new javax.swing.JTextField();
        ingexpiry = new javax.swing.JFormattedTextField();
        addbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        delbtn = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        ingcategory = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseDragged(evt);
            }
        });

        ingtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Expiry Date", "Category"
            }
        ));
        ingtable.setShowGrid(false);
        ingtable.setShowHorizontalLines(true);
        ingtable.setShowVerticalLines(true);
        ingtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingtableMouseClicked(evt);
            }
        });
        ingtable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ingtableComponentShown(evt);
            }
        });
        jScrollPane2.setViewportView(ingtable);

        jScrollPane3.setViewportView(jScrollPane2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(316, 248, 510, 390));

        jLabel1.setText("Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 350, -1, -1));

        jLabel2.setText("Expiry Date");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 420, -1, -1));

        ingname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingnameActionPerformed(evt);
            }
        });
        getContentPane().add(ingname, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 380, 326, -1));

        ingexpiry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingexpiryActionPerformed(evt);
            }
        });
        getContentPane().add(ingexpiry, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 450, 326, -1));

        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        getContentPane().add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 500, -1, -1));

        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        getContentPane().add(updatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 500, -1, -1));

        delbtn.setText("Delete");
        delbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delbtnActionPerformed(evt);
            }
        });
        getContentPane().add(delbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 500, -1, -1));

        clearbtn.setText("Clear");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });
        getContentPane().add(clearbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 500, -1, -1));

        jLabel3.setText("Ingredient Added Successfully!!");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 560, -1, -1));

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 550, -1, -1));

        jLabel4.setText("Category");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 280, -1, -1));

        ingcategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Spicy", "Sweet", "Savoury", " " }));
        ingcategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingcategoryActionPerformed(evt);
            }
        });
        getContentPane().add(ingcategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 310, 326, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("items highlighted in red are near expiry ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background restaurant .png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, -20, 1350, 780));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:                                                                                                                   
                                                                                                                   
    int selectedRow = ingtable.getSelectedRow();
    if (selectedRow != -1) {
        try {
            int id = Integer.parseInt(ingtable.getValueAt(selectedRow, 0).toString());
            String name = ingname.getText();
            String expiryText = ingexpiry.getText();
             String category = ingcategory.getSelectedItem().toString();
            
            if (expiryText != null && !expiryText.isEmpty()) {
                // Assuming the date is in the format yyyy-MM-dd
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date expiryDate = dateFormat.parse(expiryText);
                Ingredient ingredient = new Ingredient(id, name, expiryDate,category);
                ingredientDao.updateIngredient(ingredient);
                jLabel3.setText("Ingredient Updated Successfully!!");
            } 
            else {
                jLabel3.setText("Please enter a valid expiry date.");
            }
        } catch (NumberFormatException e) {
            jLabel3.setText("Failed to parse ingredient ID: " + e.getMessage());
        } catch (ParseException e) {
            jLabel3.setText("Failed to parse expiry date: " + e.getMessage());
        } catch (Exception e) {
            jLabel3.setText("Failed to Update Ingredient: " + e.getMessage());
        }
    } else {
        jLabel3.setText("Please select an ingredient to update.");
    }
          

    }//GEN-LAST:event_updatebtnActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        // TODO add your handling code here:                                      
    ingname.setText("");
    ingexpiry.setText("");
    jLabel3.setText("Fields Cleared!!");

    }//GEN-LAST:event_clearbtnActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
      // TODO add your handling code here: 
    String name = ingname.getText();
    String dateString = ingexpiry.getText();
    String category = ingcategory.getSelectedItem().toString(); 
    if (name.isEmpty() || dateString.isEmpty() || category.isEmpty()) {// Check if any fields are empty
        jLabel3.setText("Please fill all the fields.");
        return;  // Stop further processing
    }
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    try {
        Date date = dateFormat.parse(dateString);
        boolean result = ingredientDao.addIngredient(new Ingredient(0, name, date, category));
        if (result) {
            jLabel3.setText("Ingredient Added Successfully!!");
            updateTable();
        } else {
            jLabel3.setText("Failed to add ingredient.");}
    } catch (ParseException e) {
        jLabel3.setText("Please enter a valid expiry date."); }
    }//GEN-LAST:event_addbtnActionPerformed
 public void updateTable() {
        DefaultTableModel model = (DefaultTableModel) ingtable.getModel();
        model.setRowCount(0); // Clear previous content
        
        // Get all ingredients from the database
        List<Ingredient> ingredients = ingredientDao.getAllIngredients();
        
        // Add ingredients to the table
        for (String category : ingredientDao.getCategorizedIngredients().keySet()) {
           List<Ingredient> categoryIngredients = ingredientDao.getCategorizedIngredients().get(category);
            for (Ingredient ingredient : categoryIngredients) {
                model.addRow(new Object[]{ingredient.getId(), ingredient.getName(), 
                    ingredient.getExpiryDate(), ingredient.getCategory()});
            }
        }
        
        model.fireTableDataChanged();
    }
    
   // public static void updateTable(JTable table, Object[][] newData, String[] columnNames) {
//        DefaultTableModel model = (DefaultTableModel) table.getModel();
        
//         Clear previous content
//        model.setRowCount(0);
        
        // Add new content
//        for (Object[] row : newData) {
//       /     model.addRow(row);
//        }
        
        // Update column names
//        model.setColumnIdentifiers(new String[]{"ID", "Name", "Expiry Date"});
       // ingtable.setModel(model);
        
        // Notify the table that its model has changed
//        model.fireTableDataChanged();
public static void updateTable(JTable table, String name, String expiryDate, String category) {
    DefaultTableModel model = (DefaultTableModel) table.getModel();
    
    // Clear previous content
    model.setRowCount(0);
    
    // Add new content
    //Object[] newRow = {name, expiryDate,category};
    //model.addRow(newRow);
    Object[] newRow = {model.getRowCount() + 1, name, expiryDate, category};
    model.addRow(newRow);
    // Notify the table that its model has changed
    model.fireTableDataChanged();
}
   // }
    
    private void ingtableComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ingtableComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_ingtableComponentShown

    private void delbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delbtnActionPerformed
        // TODO add your handling code here:                                       
    int selectedRow = ingtable.getSelectedRow();
    if (selectedRow != -1) {
        try {
            int id = Integer.parseInt(ingtable.getValueAt(selectedRow, 0).toString());
            ingredientDao.deleteIngredient(id);
            ((DefaultTableModel) ingtable.getModel()).removeRow(selectedRow);
            jLabel3.setText("Ingredient Deleted Successfully!!");
        } catch (Exception e) {
            jLabel3.setText("Failed to Delete Ingredient: " + e.getMessage());
        }
    } else {
        jLabel3.setText("Please select an ingredient to delete.");
    }    
    }//GEN-LAST:event_delbtnActionPerformed

    private void ingnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingnameActionPerformed
        // TODO add your handling code here:
        System.out.println("Name entered: " + ingname.getText());
    }//GEN-LAST:event_ingnameActionPerformed

    private void ingexpiryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingexpiryActionPerformed
        // TODO add your handling code here:                                         
    System.out.println("Expiry entered: " + ingexpiry.getText());
    }//GEN-LAST:event_ingexpiryActionPerformed

    private void ingtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingtableMouseClicked
        // TODO add your handling code here:
         int selectedRow = ingtable.getSelectedRow();
    if (selectedRow != -1) {
        // Assuming ID, Name, Expiry are the columns 0, 1, 2 respectively
        Object id = ingtable.getValueAt(selectedRow, 0);
        Object name = ingtable.getValueAt(selectedRow, 1);
        Object expiry = ingtable.getValueAt(selectedRow, 2);
         Object category = ingtable.getValueAt(selectedRow, 3);
         System.out.println("Category: " + category);

        ingname.setText(name.toString());
        ingexpiry.setText(expiry.toString());
        ingcategory.setSelectedItem(category.toString());
    }
    }//GEN-LAST:event_ingtableMouseClicked

    private void jScrollPane3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane3MouseDragged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          int a=JOptionPane.showConfirmDialog(null,"Do you really want to Close Application.","Select",JOptionPane.YES_NO_OPTION);
        if(a==0){
            System.exit(0);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
         DefaultTableModel dtm=(DefaultTableModel) ingtable.getModel();
        List<Ingredient>list=Ingredientdao.getAllIngredients();
        Iterator<Ingredient> itr=list.iterator();
        while(itr.hasNext()){
            Ingredient ing=itr.next();
            dtm.addRow(new Object[]{ing.getId(),ing.getName(),ing.getExpiryDate(),ing.getCategory()});
            dtm.fireTableDataChanged();
        }
    }//GEN-LAST:event_formComponentShown

    private void ingcategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingcategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingcategoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FoodInventorySystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FoodInventorySystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FoodInventorySystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FoodInventorySystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FoodInventorySystem().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton clearbtn;
    private javax.swing.JButton delbtn;
    private javax.swing.JComboBox<String> ingcategory;
    private javax.swing.JFormattedTextField ingexpiry;
    private javax.swing.JTextField ingname;
    private javax.swing.JTable ingtable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
